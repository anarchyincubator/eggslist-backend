name: Continuous Integration and Delivery

on: [push]

env:
  WEB_IMAGE: fedorgrab/eggslist_backend:latest

jobs:

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Add environment variables to .env
        run: |
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo ENVIRONMENT=${{ secrets.ENVIRONMENT }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo DB_USER=${{ secrets.DB_USER }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} >> .env
          echo REDIS_HOST=${{ secrets.REDIS_HOST }} >> .env
          echo REDIS_PORT=${{ secrets.REDIS_PORT }} >> .env
          echo REDIS_DB=${{ secrets.REDIS_DB }} >> .env
          echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env
          echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env
          echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
          echo DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }} >> .env
          echo EMAIL_PORT=${{ secrets.EMAIL_PORT }} >> .env
          echo WEB_IMAGE=${{ secrets.WEB_IMAGE }} >> .env
          echo NAMESPACE=${{ secrets.NAMESPACE }} >> .env
          echo PERSONAL_ACCESS_TOKEN=${{ secrets.PERSONAL_ACCESS_TOKEN }} >> .env
          echo DO_ACCESS_KEY_ID=${{ secrets.DO_ACCESS_KEY_ID  }} >> .env
          echo DO_SECRET_ACCESS_KEY=${{ secrets.DO_SECRET_ACCESS_KEY }} >> .env
          echo DO_STORAGE_BUCKET_NAME=${{ secrets.DO_STORAGE_BUCKET_NAME }} >> .env
      - name: Set environment variables
        run: |
          echo "WEB_IMAGE=$(echo ${{env.WEB_IMAGE}} )" >> $GITHUB_ENV

      - name: Log in to GitHub Packages
        run: docker login ${{ secrets.DOCKER_REGISTRY }} -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Pull images
        run: |
          docker pull ${{ env.WEB_IMAGE }} || true
      - name: Build images
        run: |
          docker build -f ./deploy/Dockerfile -t ${{ env.WEB_IMAGE }} .
      - name: Push images
        run: |
          docker push ${{ env.WEB_IMAGE }}

  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Add environment variables to .env
        run: |
          echo WEB_IMAGE=${{ env.WEB_IMAGE }} >> .env
          echo NAMESPACE=${{ secrets.NAMESPACE }} >> .env
          echo PERSONAL_ACCESS_TOKEN=${{ secrets.PERSONAL_ACCESS_TOKEN }} >> .env
          echo DIGITAL_OCEAN_TOKEN=${{ secrets.DIGITAL_OCEAN_TOKEN }} >> .env
      - name: Add the private SSH key to the ssh-agent
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
      - name: Build and deploy images on DigitalOcean
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          scp  -o StrictHostKeyChecking=no -r ./.env root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:/eggslist/github-deployer
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} << 'ENDSSH'
            cd /eggslist/github-deployer
            source .env
            docker login ${{ secrets.DOCKER_REGISTRY }} -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker rm eggslist-backend --force
            docker rmi $WEB_IMAGE --force
            docker system prune --force
            docker pull $WEB_IMAGE
            docker run --name eggslist-backend -p 8000:8000 -d $WEB_IMAGE
          ENDSSH
